name: Spread

on:
  push:
    branches:
    - master
    - staging
    - trying
    - release/[0-9]+.[0-9]+
    tags:
    - v[0-9]+[0-9]+.[0-9]+
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  GetMatrix:
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
    - id: set-matrix
      name: Determine BuildAndTest matrix
      run: |
        set -euo pipefail

        if ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}; then
          TASKS='"lxd:ubuntu-20.04:spread/build/ubuntu:asan"
                 "lxd:ubuntu-20.04:spread/build/ubuntu:tsan"
                 "lxd:ubuntu-20.04:spread/build/ubuntu:ubsan"
                 "lxd:ubuntu-20.04:spread/build/ubuntu:asan_clang"
                 "lxd:ubuntu-20.04:spread/build/ubuntu:tsan_clang"
                 "lxd:ubuntu-20.04:spread/build/ubuntu:ubsan_clang"'
        else
          TASKS='"lxd:alpine-3.14:spread/build/alpine:amd64"
                 "lxd:alpine-edge:spread/build/alpine:amd64"
                 "lxd:ubuntu-20.04:spread/build/sbuild:debian_sid"
                 "lxd:ubuntu-20.04:spread/build/sbuild:ubuntu"
                 "lxd:ubuntu-20.04:spread/build/sbuild:ubuntu_hirsute"
                 "lxd:ubuntu-20.04:spread/build/sbuild:ubuntu_impish"
                 "lxd:ubuntu-20.04:spread/build/sbuild:ubuntu_arm64"
                 "lxd:ubuntu-20.04:spread/build/ubuntu:rpi"
                 "lxd:ubuntu-20.04:spread/build/ubuntu:clang"
                 "lxd:fedora-33:spread/build/fedora:amd64"
                 "lxd:fedora-34:spread/build/fedora:amd64"'
          FAILING_TASKS='"lxd:ubuntu-20.04:spread/build/sbuild:ubuntu_devel"
                         "lxd:ubuntu-20.04:spread/build/sbuild:ubuntu_proposed"'
        fi

        ( echo ${TASKS:-} | jq -s '{ "spread-task": ., "allow-fail": [false] }';
          echo ${FAILING_TASKS:-} | jq '{ "spread-task": ., "allow-fail": true }' | jq -s '{ "include": . }' ) \
        | jq -cs add | awk '{ print "::set-output name=matrix::" $0 }'

  BuildAndTest:
    needs: GetMatrix

    strategy:
      fail-fast: true
      matrix: ${{ fromJSON(needs.GetMatrix.outputs.matrix) }}

    runs-on: ubuntu-latest

    env:
      DEBFULLNAME: "Mir CI Bot"
      DEBEMAIL: "mir-ci-bot@canonical.com"
      SPREAD_PATH: "/tmp/spread"

    steps:
    - name: Set up LXD
      uses: whywaita/setup-lxd@v1

    - name: Set up Spread
      run: |
        curl -s -O https://people.canonical.com/~chrishr/spread.snap
        sudo snap install --dangerous spread.snap
        sudo snap connect spread:lxd lxd:lxd
        lxc profile set default security.privileged=true security.nesting=true
        sudo apt-get install --yes binfmt-support qemu-user-static
        echo "LXD_DIR=/var/snap/lxd/common/lxd" >> $GITHUB_ENV

    - name: Set up CCache
      id: setup-ccache
      run: |
        sudo apt-get install ccache
        ccache --max-size=1.2G  # a fresh build yielded 1.1GB of cache
        /snap/bin/lxc profile device add default ccache disk source=${HOME}/.ccache/ path=/root/.ccache

    - name: CCache
      uses: actions/cache@v2
      with:
        key: ccache-${{ matrix.spread-task }}
        path: ~/.ccache/**

    - name: Check out code
      uses: actions/checkout@v2

    - name: Run Spread task
      run: |
        snap run spread -v ${{ matrix.spread-task }}
      continue-on-error: ${{ matrix.allow-fail }}

    - name: Clear CCache stats
      run: ccache --show-stats --zero-stats

  # Report result to Bors on `staging` and `trying` branches.
  Bors:
    if: ${{ always() && github.event_name == 'push' && contains('refs/heads/staging refs/heads/trying', github.ref) }}
    needs:
    - BuildAndTest

    runs-on: ubuntu-latest

    steps:
    - name: Report failure
      if: ${{ needs.BuildAndTest.result != 'success' }}
      run: exit 1
